{"ast":null,"code":"var _jsxFileName = \"/Users/prernasharma/Desktop/Frontend/Travel/frontend/src/pages/QRPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/QRPage.css'; // Optional: Ensure your styles are loaded\nimport p from '../assets/images/QRImg.png';\nimport Footer from \"../components/Footer/Footer\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QRPage = () => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  // Function to toggle dark mode\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode); // Toggle the dark mode state\n  };\n\n  // Save the theme in localStorage to persist on reload\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      setIsDarkMode(savedTheme === 'dark');\n      document.body.classList.toggle('dark-theme', savedTheme === 'dark');\n    }\n  }, []);\n\n  // Toggle theme (light/dark)\n  const toggleTheme = () => {\n    const newTheme = !isDarkMode ? 'dark' : 'light';\n    setIsDarkMode(!isDarkMode);\n    localStorage.setItem('theme', newTheme); // Save theme to localStorage\n    document.body.classList.toggle('dark-theme', !isDarkMode); // Apply dark-theme class\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `qr-container ${isDarkMode ? 'dark-theme' : 'light-theme'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Scan the QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: p,\n        alt: \"QR Code\",\n        className: \"qr-code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Scan the above QR code to proceed with your plan.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleTheme,\n        style: {\n          position: 'fixed',\n          top: '20px',\n          right: '30px',\n          backgroundColor: 'transparent',\n          border: 'none',\n          cursor: 'pointer',\n          zIndex: '1000',\n          fontSize: '24px'\n        },\n        children: isDarkMode ? 'ðŸŒž' : 'ðŸŒ™'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(QRPage, \"bUs4CHDjU8AH+ZZYt8wlh4bHppI=\");\n_c = QRPage;\nexport default QRPage;\nvar _c;\n$RefreshReg$(_c, \"QRPage\");","map":{"version":3,"names":["React","useState","useEffect","p","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","QRPage","_s","isDarkMode","setIsDarkMode","toggleDarkMode","savedTheme","localStorage","getItem","document","body","classList","toggle","toggleTheme","newTheme","setItem","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","style","position","top","right","backgroundColor","border","cursor","zIndex","fontSize","_c","$RefreshReg$"],"sources":["/Users/prernasharma/Desktop/Frontend/Travel/frontend/src/pages/QRPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/QRPage.css'; // Optional: Ensure your styles are loaded\nimport p from '../assets/images/QRImg.png'\nimport Footer from \"../components/Footer/Footer\";\n\nconst QRPage = () => {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  // Function to toggle dark mode\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode); // Toggle the dark mode state\n  };\n\n  // Save the theme in localStorage to persist on reload\n  useEffect(() => {\n      const savedTheme = localStorage.getItem('theme');\n      if (savedTheme) {\n        setIsDarkMode(savedTheme === 'dark');\n        document.body.classList.toggle('dark-theme', savedTheme === 'dark');\n      }\n    }, []);\n  \n    // Toggle theme (light/dark)\n    const toggleTheme = () => {\n      const newTheme = !isDarkMode ? 'dark' : 'light';\n      setIsDarkMode(!isDarkMode);\n      localStorage.setItem('theme', newTheme); // Save theme to localStorage\n      document.body.classList.toggle('dark-theme', !isDarkMode); // Apply dark-theme class\n    };\n  \n  return (\n    <>\n    <div className={`qr-container ${isDarkMode ? 'dark-theme' : 'light-theme'}`}>\n      <h2>Scan the QR Code</h2>\n      <img src={p} alt=\"QR Code\" className=\"qr-code\" />\n      <p>Scan the above QR code to proceed with your plan.</p>\n\n      {/* Toggle Button */}\n      <button\n        onClick={toggleTheme}\n        style={{\n          position: 'fixed',\n          top: '20px',\n          right: '30px',\n          backgroundColor: 'transparent',\n          border: 'none',\n          cursor: 'pointer',\n          zIndex: '1000',\n          fontSize: '24px',\n        }}\n      >\n        {isDarkMode ? 'ðŸŒž' : 'ðŸŒ™'}\n      </button>\n      </div>\n      <Footer />\n      </>\n  );\n};\n\nexport default QRPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sBAAsB,CAAC,CAAC;AAC/B,OAAOC,CAAC,MAAM,4BAA4B;AAC1C,OAAOC,MAAM,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAMY,cAAc,GAAGA,CAAA,KAAM;IAC3BD,aAAa,CAAC,CAACD,UAAU,CAAC,CAAC,CAAC;EAC9B,CAAC;;EAED;EACAT,SAAS,CAAC,MAAM;IACZ,MAAMY,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,IAAIF,UAAU,EAAE;MACdF,aAAa,CAACE,UAAU,KAAK,MAAM,CAAC;MACpCG,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,YAAY,EAAEN,UAAU,KAAK,MAAM,CAAC;IACrE;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAG,CAACX,UAAU,GAAG,MAAM,GAAG,OAAO;IAC/CC,aAAa,CAAC,CAACD,UAAU,CAAC;IAC1BI,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAED,QAAQ,CAAC,CAAC,CAAC;IACzCL,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,YAAY,EAAE,CAACT,UAAU,CAAC,CAAC,CAAC;EAC7D,CAAC;EAEH,oBACEL,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACAlB,OAAA;MAAKmB,SAAS,EAAE,gBAAgBd,UAAU,GAAG,YAAY,GAAG,aAAa,EAAG;MAAAa,QAAA,gBAC1ElB,OAAA;QAAAkB,QAAA,EAAI;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBvB,OAAA;QAAKwB,GAAG,EAAE3B,CAAE;QAAC4B,GAAG,EAAC,SAAS;QAACN,SAAS,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDvB,OAAA;QAAAkB,QAAA,EAAG;MAAiD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAGxDvB,OAAA;QACE0B,OAAO,EAAEX,WAAY;QACrBY,KAAK,EAAE;UACLC,QAAQ,EAAE,OAAO;UACjBC,GAAG,EAAE,MAAM;UACXC,KAAK,EAAE,MAAM;UACbC,eAAe,EAAE,aAAa;UAC9BC,MAAM,EAAE,MAAM;UACdC,MAAM,EAAE,SAAS;UACjBC,MAAM,EAAE,MAAM;UACdC,QAAQ,EAAE;QACZ,CAAE;QAAAjB,QAAA,EAEDb,UAAU,GAAG,IAAI,GAAG;MAAI;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACNvB,OAAA,CAACF,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACR,CAAC;AAET,CAAC;AAACnB,EAAA,CApDID,MAAM;AAAAiC,EAAA,GAANjC,MAAM;AAsDZ,eAAeA,MAAM;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}